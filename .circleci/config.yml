version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11.2
        environment:
          GO111MODULE: "on"
          DATABASE_URL: "postgres://docker:password@127.0.0.1/docker?sslmode=disable"
          TEST_RESULTS: /tmp/test-results
      - image: circleci/postgres:11.1-ram
        environment:
          POSTGRES_DB: "docker"
          POSTGRES_USER: "docker"
          POSTGRES_PASSWORD: "password"

    working_directory: /go/src/github.com/sawadashota/sql-test-sample
    steps:
      - checkout
      - restore_cache:
          name: Restore go modules cache
          keys:
            - mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
      - run:
          name: Install dependencies
          command: go mod download
      - run:
          name: Install linters
          command: |
            go get github.com/jstemmer/go-junit-report
      - save_cache:
          name: Save go modules cache
          key: mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod/cache
      - run:
          name: Run tests
          command: |
            mkdir -p ${TEST_RESULTS}
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -coverprofile ${TEST_RESULTS}/coverage.txt -v ./... | tee ${TEST_RESULTS}/go-test.out
            go tool cover -html ${TEST_RESULTS}/coverage.txt -o ${TEST_RESULTS}/coverage.html
      - run:
          name: Send result codecov
          command: |
            cp ${TEST_RESULTS}/coverage.txt .
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
